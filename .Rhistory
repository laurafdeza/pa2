lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
mutate(lex_stress=replace(lex_stress, 1 == "paro", 2 == "oxyt"))
glimpse(lex_ac_clean)
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
mutate(lex_stress=replace(lex_stress, "paro" == 1, "oxyt" == 2))
glimpse(lex_ac_clean)
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
mutate(lex_stress=replace(lex_stress, c("paro" == 1, "oxyt" == 2)))
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
mutate(lex_stress=replace(lex_stress, "paro" == 1, "oxyt" == 2, qsec["paro" == 1, "oxyt" == 2]))
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
recode(lex_stress, 1 = "paro", 2 = "oxyt")
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
recode(lex_stress, 1 == "paro", 2 == "oxyt") %>%
glimpse()
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
recode(., lex_stress, 1 == "paro", 2 == "oxyt") %>%
glimpse()
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
recode(lex_ac$lex_stress, 1 == "paro", 2 == "oxyt") %>%
glimpse()
# split info column into item and category:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_")
lex_ac_clean[lex_ac_clean$lex_stress == 1, "lex_stress"] <- "paroxytone"
lex_ac_clean[lex_ac_clean$lex_stress == 2, "lex_stress"] <- "oxytone"
glimpse(lex_ac_clean)
# split info column into item and position of lexical stress:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
rename(., duration = durationV)
lex_ac_clean[lex_ac_clean$lex_stress == 1, "lex_stress"] <- "paroxytone"
lex_ac_clean[lex_ac_clean$lex_stress == 2, "lex_stress"] <- "oxytone"
glimpse(lex_ac_clean)
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_stats <- lex_ac_clean %>%
group_by(item, lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(durationV))
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_stats <- lex_ac_clean %>%
group_by(item, lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_stats <- lex_ac_clean %>%
group_by(item, lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(item, lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(item, lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(item, lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
# calculate average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress, item) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
# calculate average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
devtools::install_github("AckerDWM/gg3D")
## An empty plot with 3 axes
qplot(x=0, y=0, z=0, geom="blank") +
theme_void() +
axes_3D()
library(gg3D)
devtools::install(AckerDWM/gg3D)
devtools::install_github("AckerDWM/gg3D")
library(gg3D)
library(plotly)
install.packages("plotly")
library(plotly)
fig <- plot_ly(lex_ac_clean, x = ~mean(f0), y = ~mean(int), z = ~mean(duration), color = ~lex_stress,
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
fig
fig <- plot_ly(lex_ac_clean, x = ~f0, y = ~int, z = ~duration, color = ~lex_stress,
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
fig
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
plot_ly(., x = ~mean_Hz, y = ~mean_dB, z = ~mean_ms, color = ~lex_stress,
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
plot_ly(lex_ac_stats, x = ~mean_Hz, y = ~mean_dB, z = ~mean_ms, color = ~lex_stress,
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
lex_ac_clean %>%
group_by(lex_stress) %>%
plot_ly(lex_ac_stats, x = ~mean(f0), y = ~mean(int), z = ~mean(duration),
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
lex_ac_clean %>%
group_by(lex_stress) %>%
plot_ly(lex_ac_stats, x = ~mean(f0), y = ~mean(int), z = ~mean(duration),
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
lex_ac_clean %>%
group_by(lex_stress) %>%
plot_ly(lex_ac_stats, x = ~mean(f0), y = ~mean(int), z = ~mean(duration),
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
lex_ac_clean %>%
group_by(lex_stress) %>%
plot_ly(., x = ~mean(f0), y = ~mean(int), z = ~mean(duration),
marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150))
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
ggplot(., aes(x = lex_stress, y = mean_Hz)) +
geom_point()
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
plot_ly(x=mean_Hz, y=mean_dB, z=mean_ms, type="scatter3d", mode="markers", color=lex_stress)
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
plot_ly(., x=mean_Hz, y=mean_dB, z=mean_ms, type="scatter3d", mode="markers", color=lex_stress)
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
plot_ly(stats, x=mean_Hz, y=mean_dB, z=mean_ms, type="scatter3d", mode="markers", color=lex_stress)
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
plot_ly(stats, x=mean_Hz, y=mean_dB, z=mean_ms, type="scatter3d", mode="markers", color=lex_stress)
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
%>%
plot_ly(stats, x=mean_Hz, y=mean_dB, z=mean_ms, type="scatter3d", mode="markers", color=lex_stress)
lex_ac_clean %>%
group_by(lex_stress) %>%
plot_ly(., x=mean(f0), y=mean(int), z=mean(duration), type="scatter3d", mode="markers", color=lex_stress)
lex_ac_clean
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
ggplot(., aes(x = lex_stress, y = mean_Hz)) +
geom_point(color='lightblue')
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
ggplot(., aes(x = lex_stress, y = mean_Hz)) +
geom_point(color='lightblue')
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
ggplot(., aes(x = lex_stress, y = mean_Hz)) +
geom_point(color='lightblue') +
theme_bw()
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
ggplot(., aes(x = lex_stress, y = mean_Hz)) +
geom_point(color='blue') +
theme_bw()
# calculate and plot average duration, f0 and intensity as a function of lexical stress
lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms) %>%
ggplot(., aes(x = lex_stress, y = mean_Hz)) +
geom_point(color='blue') +
theme_bw() %>%
ggplot(., aes(x = lex_stress, y = mean_dB)) +
geom_point(color='blue') +
theme_bw() %>%
ggplot(., aes(x = lex_stress, y = mean_ms)) +
geom_point(color='blue') +
theme_bw()
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
stats
plot_ly(stats, x = ~mean_Hz, y = ~mean_dB, z = ~mean_ms, color = ~lex_stress, colors = c('#BF382A', '#0C4B8E'))
plot_ly(stats, x = ~mean_Hz, y = ~mean_dB, z = ~mean_ms)
ggplot(stats, aes(lex_stress, mean_Hz) +
ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point()
# load packages
library(tidyverse)
# read data
lex_ac <- read_csv("./data/data.csv")
# split info column into item and position of lexical stress:
# 1 = paroxytone
# 2 = oxytone
lex_ac_clean <- separate(data = lex_ac,
col = info,
into = c("item", "lex_stress"),
sep = "_") %>%
rename(., duration = durationV)
lex_ac_clean[lex_ac_clean$lex_stress == 1, "lex_stress"] <- "paroxytone"
lex_ac_clean[lex_ac_clean$lex_stress == 2, "lex_stress"] <- "oxytone"
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
print(mean_Hz, mean_dB, mean_ms)
ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point()
ggplot(stats, aes(lex_stress, mean_Hz, color = "blue")) +
geom_point()
ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange")
ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="orange")
ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green")
ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple")
Hz <- ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange")
dB <- ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green")
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple")
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
install.packages("ggpubr")
library(ggpubr)
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
Hz <- ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
Hz
dB <- ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple")
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
labs(x = "Position of lexical stress"))
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
labs(x = "Position of lexical stress")
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
Hz <- ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean F0 (Hz)")
dB <- ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean intensity (dB)")
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
labs(x = "Position of lexical stress", y = "Mean duration (ms)")
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
dB <- ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean intensity \n(dB)")
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
labs(x = "Position of lexical stress", y = "Mean duration \n(ms)")
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
Hz <- ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean F0 \n(Hz)")
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
labs(x = "Position of lexical stress", y = "Mean duration \n(ms)") +
scale_x_discrete(labels=c("oxytone" = "Oxytone", "paroxytone" = "Paroxytone"))
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
ggarrange(Hz, dB, ms, ncol = 1, nrow = 3) + ggtitle("Plot of length \n by dose")
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
fig + ggtitle("Plot of length \n by dose")
annotate_figure(fig,
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
annotate_figure(fig, top = text_grob("Visualizing Tooth Growth")
annotate_figure(fig, top = text_grob("Visualizing Tooth Growth"))
annotate_figure(fig, top = text_grob("Mean Values of Lexical Stress Acoustic Correlates in Spanish"))
Hz <- ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange") +
geom_text() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean F0 \n(Hz)")
dB <- ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green") +
geom_text() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean intensity \n(dB)")
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
geom_text() +
labs(x = "Position of lexical stress", y = "Mean duration \n(ms)") +
scale_x_discrete(labels=c("oxytone" = "Oxytone", "paroxytone" = "Paroxytone"))
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, labels = "AUTO")
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, labels = geom_text())
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, labels)
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, geom_label())
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, label = rownames(stats))
help(ggarrange)
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, labels(stats))
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3, labels(stats)) + geom_text()
annotate_figure(fig, top = text_grob("Mean Values of Lexical Stress Acoustic Correlates in Spanish")) + geom_text()
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
Hz <- ggplot(stats, aes(lex_stress, mean_Hz)) +
geom_point(color="orange") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean F0 \n(Hz)")
dB <- ggplot(stats, aes(lex_stress, mean_dB)) +
geom_point(color="green") +
#        geom_text() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(y = "Mean intensity \n(dB)")
ms <- ggplot(stats, aes(lex_stress, mean_ms)) +
geom_point(color="purple") +
labs(x = "Position of lexical stress", y = "Mean duration \n(ms)") +
scale_x_discrete(labels=c("oxytone" = "Oxytone", "paroxytone" = "Paroxytone"))
fig <- ggarrange(Hz, dB, ms, ncol = 1, nrow = 3)
annotate_figure(fig, top = text_grob("Mean Values of Lexical Stress Acoustic Correlates in Spanish"))
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
kable(mean_Hz, mean_dB, mean_ms)
library(knitr)
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration)) %>%
kable(mean_Hz, mean_dB, mean_ms)
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
kable(stats[mean_Hz, mean_dB, mean_ms])
# calculate and plot average duration, f0 and intensity as a function of lexical stress
stats <- lex_ac_clean %>%
group_by(lex_stress) %>%
summarize(mean_Hz = mean(f0),
mean_dB = mean(int),
mean_ms = mean(duration))
knitr::kable(stats)
